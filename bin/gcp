#!/bin/bash

set -e

OPTIND=1

project=$GOOGLE_PROJECT_ID

while getopts ":p:" opt; do
    case $opt in
        p)
            project=$OPTARG
            ;;
        \?)
            echo "Invalid argument -$OPTARG"
            exit 1
            ;;
        :)
            echo "Option -$OPTARG requires an argument."
            exit 1
            ;;
    esac
done

if [ -z "$project" ]; then
    echo "Project must be provided"
fi

shift $((OPTIND-1))

select_instance() {
    local instances
    instances=$(gcloud compute --project "$project" instances list --format json | jq -r '.[] | select (.status == "RUNNING") | .name')
    local selected
    selected=$(echo "$instances" | fzf +m) 
    if [ "$selected" == "" ]; then
        exit 1
    fi
    echo "$selected"
}

instance_ssh() {
    local selected
    selected=$(select_instance)
    gcloud compute --project "$project" ssh "$selected"
}

instance_scp() {
    local file=$1
    if [ -z "$file" ]; then
        echo "file must be provided"
        exit 1
    fi
    local selected
    selected=$(select_instance) 
    gcloud compute --project "$project" scp --recurse "$file" "$selected":.
}

instance_exec() {
    local selected
    selected=$(select_instance) 
    gcloud compute --project "$project" ssh "$selected" --command="$*"
}

instance_sync() {
    local selected
    selected=$(select_instance) 
    local ip
    ip=$(gcloud compute --project "$project" instances describe "$selected" | grep "natIP" | awk '{print $2}')

    if [ -z "$1" ]; then
        echo "path must be provided"
        exit 1
    fi
    local abs_path
    abs_path=$(realpath "$1")
    local local_path
    local_path=$(dirname "$abs_path")
    ssh "$ip" "mkdir -p $local_path"
    lsyncd -nodaemon -delay 0 -rsyncssh "$abs_path" "$ip" "$abs_path"
}

case $1 in
    "ssh")
        shift
        instance_ssh
        ;;
    "scp")
        shift
        instance_scp "$1"
        ;;
    "exec")
        shift
        instance_exec "$@"
        ;;
    "sync")
        shift
        instance_sync "$1"
        ;;
    *)
        echo ":("
        exit 1
        ;;
esac
